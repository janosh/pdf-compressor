[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-compressor"
version = "0.3.0"
description = "CLI + Python API for batch compressing PDFs with iLovePDF.com"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
readme = "readme.md"
keywords = ["cli", "compression", "ilovepdf", "pdf"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
]
requires-python = ">=3.9"
dependencies = ["requests >= 2.25.0"]
license = { file = "license" }

[project.urls]
Homepage = "https://github.com/janosh/pdf-compressor"
Package = "https://pypi.org/project/pdf-compressor"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
stats = ["pandas"]              # needed for --write-stats option

[project.scripts]
pdf-compressor = "pdf_compressor:main"

[tool.setuptools.packages]
find = { include = ["pdf_compressor*"], exclude = ["tests*"] }

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = false

[tool.ruff]
target-version = "py39"
select = ["ALL"]
ignore = [
    "ANN101",
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs
    "C901",   # Function is too complex
    "COM",
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D205",   # 1 blank line required between summary line and description
    "EM",     # Exception must not use a string literal
    "FBT001", # Boolean-typed positional argument
    "FBT002", # Boolean-default positional argument
    "PLR",    # pylint refactor
    "PT013",  # pytest-incorrect-pytest-import
    "PTH",    # Prefer pathlib over os.path
    "S101",   # Use of assert detected
    "SIM105", # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
    "T201",   # print found
    "TRY003", # Avoid specifying long messages outside the exception class
]
pydocstyle.convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["D103"]
