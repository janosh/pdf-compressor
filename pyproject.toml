[build-system]
requires = ["uv_build>=0.7.19"]
build-backend = "uv_build"

[project]
name = "pdf-compressor"
version = "0.4.0"
description = "CLI + Python API for batch compressing PDFs with iLovePDF.com"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
readme = "readme.md"
keywords = ["cli", "compression", "ilovepdf", "pdf"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
requires-python = ">=3.11"
dependencies = ["requests >= 2.25.0"]
license = { file = "license" }

[project.urls]
Homepage = "https://github.com/janosh/pdf-compressor"
Package = "https://pypi.org/project/pdf-compressor"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
stats = ["pandas"]              # needed for --write-stats-path option

[project.scripts]
pdf-compressor = "pdf_compressor:main"

[tool.uv.build-backend]
module-name = "pdf_compressor"
module-root = ""

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN001",  # missing type annotation for self
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs
    "C901",    # Function is too complex
    "COM",
    "CPY001",  # missing copyright
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D205",    # 1 blank line required between summary line and description
    "EM",      # Exception must not use a string literal
    "FURB103", # open and write should be replaced by Path(file_path).write_bytes()
    "PLC1901", # x == "" can be simplified to `not x`
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "PLR0914", # too many local variables
    "PLR0915", # too many statements
    "PT013",   # pytest-incorrect-pytest-import
    "PTH",     # Prefer pathlib over os.path
    "SIM105",  # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
    "T201",    # print found
    "TRY003",  # Avoid specifying long messages outside the exception class
]
pydocstyle.convention = "google"
isort.split-on-trailing-comma = false
preview = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["D103", "S101"]

[tool.ty.rules]
unresolved-import = "ignore"
