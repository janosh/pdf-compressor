[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-compressor"
version = "0.2.1"
description = "CLI + Python API for batch compressing PDFs with iLovePDF.com"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
readme = "readme.md"
keywords = ["pdf", "compression", "ilovepdf", "cli"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
]
requires-python = ">=3.8"
dependencies = ["requests >= 2.25.0"]
license = { file = "license" }

[project.urls]
Homepage = "https://github.com/janosh/pdf-compressor"
Package = "https://pypi.org/project/pdf-compressor"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]

[project.scripts]
pdf-compressor = "pdf_compressor:main"

[tool.setuptools.packages]
find = { include = ["pdf_compressor"] }

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = false

[tool.ruff]
target-version = "py38"
select = [
    "B",   # flake8-bugbear
    "D",   # pydocstyle
    "E",   # pycodestyle
    "ERA", # flake8-eradicate
    "F",   # pyflakes
    "I",   # isort
    "PLE", # pylint error
    "PLW", # pylint warning
    "PYI", # flakes8-pyi
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TID", # tidy imports
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    "B019",    # functools.lru_cache on methods can lead to memory leaks
    "B023",    # Function definition does not bind loop variable
    "B904",    # Within an except clause, raise exceptions with ...
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D205",    # 1 blank line required between summary line and description
    "E741",    # tmp: we should fix all ambiguous variable names
    "PLR2004", # Magic number
    "PLW0120", # tmp: awaiting bug fix https://github.com/charliermarsh/ruff/issues/3019
    "SIM105",  # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
]
pydocstyle.convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["D103"]
